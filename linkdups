#!/usr/bin/perl
#
# linkdups - Find duplicate files in a directory tree and link() them.
#
# $Id: linkdups,v 1.2 2000/04/06 16:03:05 steve Exp $

use strict;

use Getopt::Std;
use Digest::MD5;
use FileHandle;
use DirHandle;

use vars qw(%opt $context $recursive %files $debug);

$debug=0;

getopts('r', \%opt);

$recursive=$opt{'r'} if (defined($opt{'r'}));

if ($#ARGV==-1)
{
    if ($recursive)
    {
        $ARGV[0]=".";
    }
    else
    {
        $ARGV[0]="-";
    }
}

$context=new Digest::MD5;

foreach my $file (@ARGV)
{
    if (!lstat($file))
    {
        print STDERR &basename(), ": $file: $!\n";
	next;
    }

    if ($recursive && (-d(_)))
    {
        &recurse_into($file);
    }
    else
    {
        &add($file);
    }
}

sub add
{
    my $file=shift;

    #debug("Checking '$file'...");

    if (my $fd=new FileHandle "<$file")
    {
        $context->reset();
        $context->addfile($fd);
	my $hash=$context->hexdigest();
	debug("$hash  $file");
        close($fd);
	if (defined($files{$hash}))
	{
	    print "$file is a duplicate of $files{$hash}";
	    my $size=-s $file;
	    print " but it is only $size bytes" if ($size<1024);
	    print "\n";
	}
	else
	{
            $files{$hash}=$file;
	}
    }
    else
    {
        print STDERR &basename(), ": $file: $!\n";
    }
}

sub recurse_into
{
    my $dir=shift;

    if (opendir(DIR, $dir))
    {
	my $x;
        for $x (grep(!/^\.{1,2}$/, readdir(DIR)))
	{
	    lstat("$dir/$x");
	    if (-d(_))
	    {
	        &recurse_into("$dir/$x");
	    }
	    elsif (-f(_))
	    {
	        &add("$dir/$x");
	    }
	    else
	    {
	        print STDERR &basename(),
		    ": '$dir/$x' is not a plain file, skipping...\n";
	    }
	}
    }
    else
    {
        die "Can't open $dir: $!\n";
    }
}

sub basename
{
    my ($foo)=@_;
    $foo=$0 if (!defined($foo));

    return $foo if ($foo!~/\//);
    return substr($foo,(-1*length($foo))+(rindex($foo, "/")+1));
}

sub debug
{
    print STDERR @_, "\n" if ($debug);
}
